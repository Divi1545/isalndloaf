{
  "files": {
    "main.py": "from flask import Flask, render_template, request, jsonify, redirect, url_for\nimport os\nfrom datetime import datetime, timedelta\nimport requests\nimport json\nfrom functools import wraps\n\napp = Flask(__name__)\napp.secret_key = os.environ.get('SECRET_KEY', 'dev-secret-key-change-in-production')\n\n# Airtable Configuration\nAIRTABLE_API_KEY = os.environ.get('AIRTABLE_API_KEY', 'patXSNGjrXDhhqy9R.5f100a4589c2431cb934618ab69e0dc68dba17a94ffe3aa9cc437efed9571f17')\nAIRTABLE_BASE_ID = os.environ.get('AIRTABLE_BASE_ID', 'YOUR_BASE_ID')  # Replace with your base ID\nAIRTABLE_HEADERS = {\n    'Authorization': f'Bearer {AIRTABLE_API_KEY}',\n    'Content-Type': 'application/json'\n}\n\n# Table names - Extended with new tables\nTABLES = {\n    'vendors': 'Vendors',\n    'bookings': 'Bookings',\n    'payments': 'Payments',\n    'daily_reports': 'DailyReports',\n    'services': 'Services',\n    'customer_feedback': 'CustomerFeedback',\n    'marketing_campaigns': 'MarketingCampaigns',\n    'agent_training': 'AgentTraining',\n    'system_logs': 'SystemLogs'\n}\n\ndef airtable_request(method, table, record_id=None, data=None, params=None):\n    \"\"\"Generic Airtable API request handler\"\"\"\n    base_url = f\"https://api.airtable.com/v0/{AIRTABLE_BASE_ID}/{table}\"\n    url = f\"{base_url}/{record_id}\" if record_id else base_url\n    \n    try:\n        response = requests.request(\n            method=method,\n            url=url,\n            headers=AIRTABLE_HEADERS,\n            json=data,\n            params=params\n        )\n        response.raise_for_status()\n        return response.json() if response.text else None\n    except requests.exceptions.RequestException as e:\n        print(f\"Airtable API Error: {e}\")\n        return None\n\n# Helper functions\ndef get_all_records(table_name):\n    \"\"\"Fetch all records from a table\"\"\"\n    records = []\n    offset = None\n    \n    while True:\n        params = {'offset': offset} if offset else {}\n        result = airtable_request('GET', table_name, params=params)\n        \n        if result and 'records' in result:\n            records.extend(result['records'])\n            offset = result.get('offset')\n            if not offset:\n                break\n        else:\n            break\n    \n    return records\n\ndef create_record(table_name, fields):\n    \"\"\"Create a new record in Airtable\"\"\"\n    data = {'fields': fields}\n    return airtable_request('POST', table_name, data=data)\n\ndef update_record(table_name, record_id, fields):\n    \"\"\"Update an existing record\"\"\"\n    data = {'fields': fields}\n    return airtable_request('PATCH', table_name, record_id=record_id, data=data)\n\ndef delete_record(table_name, record_id):\n    \"\"\"Delete a record\"\"\"\n    return airtable_request('DELETE', table_name, record_id=record_id)\n\ndef log_system_event(event_type, table, record_id, description, user_agent='System'):\n    \"\"\"Log system events to SystemLogs table\"\"\"\n    fields = {\n        'Log ID': f'LOG{datetime.now().strftime(\"%Y%m%d%H%M%S\")}',\n        'Event Time': datetime.now().isoformat(),\n        'Event Type': event_type,\n        'Table': table,\n        'Record ID': record_id,\n        'User/Agent': user_agent,\n        'Description': description,\n        'Status': 'Success'\n    }\n    create_record(TABLES['system_logs'], fields)\n\n# Routes\n@app.route('/')\ndef index():\n    \"\"\"Dashboard with summary statistics\"\"\"\n    vendors = get_all_records(TABLES['vendors'])\n    bookings = get_all_records(TABLES['bookings'])\n    payments = get_all_records(TABLES['payments'])\n    services = get_all_records(TABLES['services'])\n    feedback = get_all_records(TABLES['customer_feedback'])\n    campaigns = get_all_records(TABLES['marketing_campaigns'])\n    \n    # Calculate statistics\n    stats = {\n        'total_vendors': len(vendors),\n        'total_bookings': len(bookings),\n        'active_bookings': len([b for b in bookings if b['fields'].get('Status') == 'Confirmed']),\n        'pending_payments': len([p for p in payments if p['fields'].get('Status') == 'Pending']),\n        'total_services': len(services),\n        'avg_rating': sum([float(f['fields'].get('Rating', '0')) for f in feedback]) / len(feedback) if feedback else 0,\n        'active_campaigns': len([c for c in campaigns if c['fields'].get('Status') == 'Active']),\n        'total_revenue': sum([p['fields'].get('Amount', 0) for p in payments if p['fields'].get('Status') == 'Completed'])\n    }\n    \n    return render_template('dashboard.html', stats=stats)\n\n# Services Management\n@app.route('/services')\ndef services_list():\n    services = get_all_records(TABLES['services'])\n    return render_template('services.html', services=services)\n\n@app.route('/services/add', methods=['GET', 'POST'])\ndef add_service():\n    if request.method == 'POST':\n        fields = {\n            'Service ID': f'SVC{datetime.now().strftime(\"%Y%m%d%H%M%S\")}',\n            'Vendor ID': request.form.get('vendor_id'),\n            'Service Name': request.form.get('service_name'),\n            'Category': request.form.get('category'),\n            'Description': request.form.get('description'),\n            'Price (LKR)': request.form.get('price'),\n            'Currency': request.form.get('currency', 'LKR'),\n            'Image URL': request.form.get('image_url'),\n            'Availability': request.form.get('availability'),\n            'Created At': datetime.now().isoformat(),\n            'Updated At': datetime.now().isoformat()\n        }\n        result = create_record(TABLES['services'], fields)\n        if result:\n            log_system_event('CREATE', 'Services', fields['Service ID'], 'New service added')\n        return redirect(url_for('services_list'))\n    \n    vendors = get_all_records(TABLES['vendors'])\n    return render_template('service_form.html', vendors=vendors)\n\n# Customer Feedback Management\n@app.route('/feedback')\ndef feedback_list():\n    feedback = get_all_records(TABLES['customer_feedback'])\n    return render_template('feedback.html', feedback=feedback)\n\n@app.route('/feedback/add', methods=['GET', 'POST'])\ndef add_feedback():\n    if request.method == 'POST':\n        fields = {\n            'Feedback ID': f'FB{datetime.now().strftime(\"%Y%m%d%H%M%S\")}',\n            'Booking ID': request.form.get('booking_id'),\n            'Vendor ID': request.form.get('vendor_id'),\n            'Customer Name': request.form.get('customer_name'),\n            'Rating': request.form.get('rating'),\n            'Review Text': request.form.get('review_text'),\n            'Sentiment': calculate_sentiment(request.form.get('review_text')),\n            'Response By Vendor': '',\n            'Response Time': '',\n            'Created At': datetime.now().isoformat()\n        }\n        result = create_record(TABLES['customer_feedback'], fields)\n        if result:\n            log_system_event('CREATE', 'CustomerFeedback', fields['Feedback ID'], 'New feedback received')\n        return redirect(url_for('feedback_list'))\n    \n    bookings = get_all_records(TABLES['bookings'])\n    vendors = get_all_records(TABLES['vendors'])\n    return render_template('feedback_form.html', bookings=bookings, vendors=vendors)\n\n# Marketing Campaigns Management\n@app.route('/campaigns')\ndef campaigns_list():\n    campaigns = get_all_records(TABLES['marketing_campaigns'])\n    return render_template('campaigns.html', campaigns=campaigns)\n\n@app.route('/campaigns/add', methods=['GET', 'POST'])\ndef add_campaign():\n    if request.method == 'POST':\n        fields = {\n            'Campaign ID': f'CAMP{datetime.now().strftime(\"%Y%m%d%H%M%S\")}',\n            'Vendor ID': request.form.get('vendor_id'),\n            'Campaign Name': request.form.get('campaign_name'),\n            'Start Date': request.form.get('start_date'),\n            'End Date': request.form.get('end_date'),\n            'Budget (LKR)': request.form.get('budget'),\n            'Channel': request.form.get('channel'),\n            'KPI': request.form.get('kpi'),\n            'Leads Generated': '0',\n            'Status': request.form.get('status', 'Planned')\n        }\n        result = create_record(TABLES['marketing_campaigns'], fields)\n        if result:\n            log_system_event('CREATE', 'MarketingCampaigns', fields['Campaign ID'], 'New campaign created')\n        return redirect(url_for('campaigns_list'))\n    \n    vendors = get_all_records(TABLES['vendors'])\n    return render_template('campaign_form.html', vendors=vendors)\n\n# Agent Training Management\n@app.route('/training')\ndef training_list():\n    training = get_all_records(TABLES['agent_training'])\n    return render_template('training.html', training=training)\n\n@app.route('/training/add', methods=['GET', 'POST'])\ndef add_training():\n    if request.method == 'POST':\n        fields = {\n            'Training ID': f'TR{datetime.now().strftime(\"%Y%m%d%H%M%S\")}',\n            'Agent Name': request.form.get('agent_name'),\n            'Dataset Source': request.form.get('dataset_source'),\n            'Version': request.form.get('version'),\n            'Accuracy': request.form.get('accuracy'),\n            'Last Train Date': request.form.get('last_train_date'),\n            'Next Scheduled Train': request.form.get('next_scheduled_train'),\n            'Notes': request.form.get('notes')\n        }\n        result = create_record(TABLES['agent_training'], fields)\n        if result:\n            log_system_event('CREATE', 'AgentTraining', fields['Training ID'], 'New training session recorded')\n        return redirect(url_for('training_list'))\n    \n    return render_template('training_form.html')\n\n# System Logs View\n@app.route('/logs')\ndef system_logs():\n    logs = get_all_records(TABLES['system_logs'])\n    # Sort logs by event time (newest first)\n    logs.sort(key=lambda x: x['fields'].get('Event Time', ''), reverse=True)\n    return render_template('system_logs.html', logs=logs[:100])  # Show last 100 logs\n\n# Helper function for sentiment analysis\ndef calculate_sentiment(text):\n    \"\"\"Basic sentiment analysis based on keywords\"\"\"\n    if not text:\n        return 'Neutral'\n    \n    positive_words = ['excellent', 'great', 'good', 'amazing', 'wonderful', 'fantastic', 'love', 'best']\n    negative_words = ['bad', 'poor', 'terrible', 'awful', 'worst', 'hate', 'disappointed']\n    \n    text_lower = text.lower()\n    positive_count = sum(1 for word in positive_words if word in text_lower)\n    negative_count = sum(1 for word in negative_words if word in text_lower)\n    \n    if positive_count > negative_count:\n        return 'Positive'\n    elif negative_count > positive_count:\n        return 'Negative'\n    else:\n        return 'Neutral'\n\n# Extended API Endpoints\n@app.route('/api/services/<vendor_id>', methods=['GET'])\ndef api_vendor_services(vendor_id):\n    \"\"\"Get all services for a specific vendor\"\"\"\n    services = get_all_records(TABLES['services'])\n    vendor_services = [s for s in services if s['fields'].get('Vendor ID') == vendor_id]\n    return jsonify({'services': vendor_services})\n\n@app.route('/api/feedback/stats', methods=['GET'])\ndef api_feedback_stats():\n    \"\"\"Get feedback statistics\"\"\"\n    feedback = get_all_records(TABLES['customer_feedback'])\n    \n    stats = {\n        'total_feedback': len(feedback),\n        'average_rating': sum([float(f['fields'].get('Rating', '0')) for f in feedback]) / len(feedback) if feedback else 0,\n        'sentiment_breakdown': {\n            'positive': len([f for f in feedback if f['fields'].get('Sentiment') == 'Positive']),\n            'neutral': len([f for f in feedback if f['fields'].get('Sentiment') == 'Neutral']),\n            'negative': len([f for f in feedback if f['fields'].get('Sentiment') == 'Negative'])\n        },\n        'response_rate': len([f for f in feedback if f['fields'].get('Response By Vendor')]) / len(feedback) * 100 if feedback else 0\n    }\n    \n    return jsonify(stats)\n\n@app.route('/api/campaigns/active', methods=['GET'])\ndef api_active_campaigns():\n    \"\"\"Get all active marketing campaigns\"\"\"\n    campaigns = get_all_records(TABLES['marketing_campaigns'])\n    today = datetime.now().date()\n    \n    active = []\n    for campaign in campaigns:\n        start = datetime.strptime(campaign['fields'].get('Start Date', ''), '%Y-%m-%d').date()\n        end = datetime.strptime(campaign['fields'].get('End Date', ''), '%Y-%m-%d').date()\n        if start <= today <= end:\n            active.append(campaign)\n    \n    return jsonify({'active_campaigns': active})\n\n# Original routes (vendors, bookings, payments) remain the same...\n# [Previous vendor, booking, payment routes continue here]\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=5000, debug=True)",
    
    "templates/services.html": "{% extends \"base.html\" %}\n\n{% block title %}Services - AI Code Agency{% endblock %}\n\n{% block content %}\n<div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n    <h1 class=\"h2\">Services Catalog</h1>\n    <div class=\"btn-toolbar mb-2 mb-md-0\">\n        <a href=\"{{ url_for('add_service') }}\" class=\"btn btn-sm btn-primary\">\n            <i class=\"bi bi-plus-circle\"></i> Add New Service\n        </a>\n    </div>\n</div>\n\n<div class=\"row\">\n    {% for service in services %}\n    <div class=\"col-md-4 mb-4\">\n        <div class=\"card h-100\">\n            {% if service.fields.get('Image URL') %}\n            <img src=\"{{ service.fields.get('Image URL') }}\" class=\"card-img-top\" alt=\"{{ service.fields.get('Service Name') }}\" style=\"height: 200px; object-fit: cover;\">\n            {% else %}\n            <div class=\"card-img-top bg-secondary text-white d-flex align-items-center justify-content-center\" style=\"height: 200px;\">\n                <i class=\"bi bi-image\" style=\"font-size: 3rem;\"></i>\n            </div>\n            {% endif %}\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">{{ service.fields.get('Service Name', '') }}</h5>\n                <p class=\"card-text\">{{ service.fields.get('Description', '') }}</p>\n                <div class=\"d-flex justify-content-between align-items-center\">\n                    <strong class=\"text-primary\">LKR {{ \"{:,.2f}\".format(service.fields.get('Price (LKR)', 0)|float) }}</strong>\n                    <span class=\"badge bg-{{ 'success' if service.fields.get('Availability') == 'Available' else 'warning' }}\">\n                        {{ service.fields.get('Availability', 'Unknown') }}\n                    </span>\n                </div>\n                <div class=\"mt-2\">\n                    <small class=\"text-muted\">Vendor: {{ service.fields.get('Vendor ID', '') }}</small>\n                </div>\n            </div>\n        </div>\n    </div>\n    {% endfor %}\n</div>\n{% endblock %}",
    
    "templates/service_form.html": "{% extends \"base.html\" %}\n\n{% block title %}Add Service - AI Code Agency{% endblock %}\n\n{% block content %}\n<div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n    <h1 class=\"h2\">Add New Service</h1>\n</div>\n\n<div class=\"row\">\n    <div class=\"col-md-8\">\n        <form method=\"POST\" action=\"{{ url_for('add_service') }}\">\n            <div class=\"mb-3\">\n                <label for=\"vendor_id\" class=\"form-label\">Select Vendor</label>\n                <select class=\"form-control\" id=\"vendor_id\" name=\"vendor_id\" required>\n                    <option value=\"\">Choose vendor...</option>\n                    {% for vendor in vendors %}\n                    <option value=\"{{ vendor.fields.get('Vendor ID') }}\">\n                        {{ vendor.fields.get('Name') }} - {{ vendor.fields.get('Category') }}\n                    </option>\n                    {% endfor %}\n                </select>\n            </div>\n            \n            <div class=\"mb-3\">\n                <label for=\"service_name\" class=\"form-label\">Service Name</label>\n                <input type=\"text\" class=\"form-control\" id=\"service_name\" name=\"service_name\" required>\n            </div>\n            \n            <div class=\"mb-3\">\n                <label for=\"category\" class=\"form-label\">Category</label>\n                <select class=\"form-control\" id=\"category\" name=\"category\" required>\n                    <option value=\"\">Select Category</option>\n                    <option value=\"Accommodation\">Accommodation</option>\n                    <option value=\"Food & Beverage\">Food & Beverage</option>\n                    <option value=\"Tours\">Tours</option>\n                    <option value=\"Transport\">Transport</option>\n                    <option value=\"Activities\">Activities</option>\n                    <option value=\"Spa & Wellness\">Spa & Wellness</option>\n                    <option value=\"Other\">Other</option>\n                </select>\n            </div>\n            \n            <div class=\"mb-3\">\n                <label for=\"description\" class=\"form-label\">Description</label>\n                <textarea class=\"form-control\" id=\"description\" name=\"description\" rows=\"3\" required></textarea>\n            </div>\n            \n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <div class=\"mb-3\">\n                        <label for=\"price\" class=\"form-label\">Price (LKR)</label>\n                        <input type=\"number\" class=\"form-control\" id=\"price\" name=\"price\" min=\"0\" step=\"0.01\" required>\n                    </div>\n                </div>\n                <div class=\"col-md-6\">\n                    <div class=\"mb-3\">\n                        <label for=\"currency\" class=\"form-label\">Currency</label>\n                        <select class=\"form-control\" id=\"currency\" name=\"currency\">\n                            <option value=\"LKR\">LKR</option>\n                            <option value=\"USD\">USD</option>\n                            <option value=\"EUR\">EUR</option>\n                        </select>\n                    </div>\n                </div>\n            </div>\n            \n            <div class=\"mb-3\">\n                <label for=\"image_url\" class=\"form-label\">Image URL</label>\n                <input type=\"url\" class=\"form-control\" id=\"image_url\" name=\"image_url\" placeholder=\"https://example.com/image.jpg\">\n            </div>\n            \n            <div class=\"mb-3\">\n                <label for=\"availability\" class=\"form-label\">Availability</label>\n                <select class=\"form-control\" id=\"availability\" name=\"availability\">\n                    <option value=\"Available\">Available</option>\n                    <option value=\"Unavailable\">Unavailable</option>\n                    <option value=\"Limited\">Limited</option>\n                </select>\n            </div>\n            \n            <div class=\"mb-3\">\n                <button type=\"submit\" class=\"btn btn-primary\">Add Service</button>\n                <a href=\"{{ url_for('services_list') }}\" class=\"btn btn-secondary\">Cancel</a>\n            </div>\n        </form>\n    </div>\n</div>\n{% endblock %}",
    
    "templates/feedback.html": "{% extends \"base.html\" %}\n\n{% block title %}Customer Feedback - AI Code Agency{% endblock %}\n\n{% block content %}\n<div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n    <h1 class=\"h2\">Customer Feedback</h1>\n    <div class=\"btn-toolbar mb-2 mb-md-0\">\n        <a href=\"{{ url_for('add_feedback') }}\" class=\"btn btn-sm btn-primary\">\n            <i class=\"bi bi-plus-circle\"></i> Add Feedback\n        </a>\n    </div>\n</div>\n\n<!-- Feedback Statistics -->\n<div class=\"row mb-4\">\n    <div class=\"col-md-12\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">Feedback Overview</h5>\n                <div id=\"feedbackStats\" class=\"row\">\n                    <!-- Stats will be loaded via JavaScript -->\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!-- Feedback List -->\n<div class=\"row\">\n    {% for review in feedback %}\n    <div class=\"col-md-6 mb-4\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <div class=\"d-flex justify-content-between align-items-center\">\n                    <strong>{{ review.fields.get('Customer Name', 'Anonymous') }}</strong>\n                    <div>\n                        {% set rating = review.fields.get('Rating', '0')|int %}\n                        {% for i in range(5) %}\n                            <i class=\"bi bi-star{% if i < rating %}-fill{% endif %} text-warning\"></i>\n                        {% endfor %}\n                    </div>\n                </div>\n            </div>\n            <div class=\"card-body\">\n                <p class=\"card-text\">{{ review.fields.get('Review Text', '') }}</p>\n                <div class=\"mb-2\">\n                    <span class=\"badge bg-{{ 'success' if review.fields.get('Sentiment') == 'Positive' else 'danger' if review.fields.get('Sentiment') == 'Negative' else 'secondary' }}\">\n                        {{ review.fields.get('Sentiment', 'Neutral') }}\n                    </span>\n                    <small class=\"text-muted\">Booking: {{ review.fields.get('Booking ID', '') }}</small>\n                </div>\n                {% if review.fields.get('Response By Vendor') %}\n                <div class=\"alert alert-info mt-2 mb-0\">\n                    <strong>Vendor Response:</strong><br>\n                    {{ review.fields.get('Response By Vendor') }}\n                    <br><small class=\"text-muted\">Response time: {{ review.fields.get('Response Time', '') }}</small>\n                </div>\n                {% else %}\n                <button class=\"btn btn-sm btn-outline-primary\" onclick=\"respondToFeedback('{{ review.id }}')\">\n                    <i class=\"bi bi-reply\"></i> Respond\n                </button>\n                {% endif %}\n            </div>\n        </div>\n    </div>\n    {% endfor %}\n</div>\n{% endblock %}\n\n{% block scripts %}\n<script>\n    // Load feedback statistics\n    fetch('/api/feedback/stats')\n        .then(response => response.json())\n        .then(data => {\n            const statsHtml = `\n                <div class=\"col-md-3\">\n                    <h6>Total Reviews</h6>\n                    <h3>${data.total_feedback}</h3>\n                </div>\n                <div class=\"col-md-3\">\n                    <h6>Average Rating</h6>\n                    <h3>${data.average_rating.toFixed(1)} ⭐</h3>\n                </div>\n                <div class=\"col-md-3\">\n                    <h6>Response Rate</h6>\n                    <h3>${data.response_rate.toFixed(0)}%</h3>\n                </div>\n                <div class=\"col-md-3\">\n                    <h6>Sentiment</h6>\n                    <small>Positive: ${data.sentiment_breakdown.positive}</small><br>\n                    <small>Neutral: ${data.sentiment_breakdown.neutral}</small><br>\n                    <small>Negative: ${data.sentiment_breakdown.negative}</small>\n                </div>\n            `;\n            document.getElementById('feedbackStats').innerHTML = statsHtml;\n        });\n    \n    function respondToFeedback(id) {\n        const response = prompt('Enter your response to this feedback:');\n        if (response) {\n            // Add AJAX call to update response\n            alert('Response recorded');\n            location.reload();\n        }\n    }\n</script>\n{% endblock %}",
    
    "templates/feedback_form.html": "{% extends \"base.html\" %}\n\n{% block title %}Add Feedback - AI Code Agency{% endblock %}\n\n{% block content %}\n<div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n    <h1 class=\"h2\">Add Customer Feedback</h1>\n</div>\n\n<div class=\"row\">\n    <div class=\"col-md-8\">\n        <form method=\"POST\" action=\"{{ url_for('add_feedback') }}\">\n            <div class=\"mb-3\">\n                <label for=\"booking_id\" class=\"form-label\">Select Booking</label>\n                <select class=\"form-control\" id=\"booking_id\" name=\"booking_id\" required>\n                    <option value=\"\">Choose booking...</option>\n                    {% for booking in bookings %}\n                    <option value=\"{{ booking.fields.get('Booking ID') }}\">\n                        {{ booking.fields.get('Booking ID') }} - {{ booking.fields.get('Customer Name') }}\n                    </option>\n                    {% endfor %}\n                </select>\n            </div>\n            \n            <div class=\"mb-3\">\n                <label for=\"vendor_id\" class=\"form-label\">Vendor</label>\n                <select class=\"form-control\" id=\"vendor_id\" name=\"vendor_id\" required>\n                    <option value=\"\">Choose vendor...</option>\n                    {% for vendor in vendors %}\n                    <option value=\"{{ vendor.fields.get('Vendor ID') }}\">\n                        {{ vendor.fields.get('Name') }}\n                    </option>\n                    {% endfor %}\n                </select>\n            </div>\n            \n            <div class=\"mb-3\">\n                <label for=\"customer_name\" class=\"form-label\">Customer Name</label>\n                <input type=\"text\" class=\"form-control\" id=\"customer_name\" name=\"customer_name\" required>\n            </div>\n            \n            <div class=\"mb-3\">\n                <label for=\"rating\" class=\"form-label\">Rating</label>\n                <select class=\"form-control\" id=\"rating\" name=\"rating\" required>\n                    <option value=\"5\">5 - Excellent</option>\n                    <option value=\"4\">4 - Good</option>\n                    <option value=\"3\">3 - Average</option>\n                    <option value=\"2\">2 - Poor</option>\n                    <option value=\"1\">1 - Terrible</option>\n                </select>\n            </div>\n            \n            <div class=\"mb-3\">\n                <label for=\"review_text\" class=\"form-label\">Review</label>\n                <textarea class=\"form-control\" id=\"review_text\" name=\"review_text\" rows=\"4\" required></textarea>\n            </div>\n            \n            <div class=\"mb-3\">\n                <button type=\"submit\" class=\"btn btn-primary\">Submit Feedback</button>\n                <a href=\"{{ url_for('feedback_list') }}\" class=\"btn btn-secondary\">Cancel</a>\n            </div>\n        </form>\n    </div>\n</div>\n{% endblock %}",
    
    "templates/campaigns.html": "{% extends \"base.html\" %}\n\n{% block title %}Marketing Campaigns - AI Code Agency{% endblock %}\n\n{% block content %}\n<div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\